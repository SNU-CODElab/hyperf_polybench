# from tvm.script import tir as T

@T.prim_func
def main0(data: T.Buffer((4000, 4000), "float32"), eps: T.Buffer((1,), "float32"), float_n: T.Buffer((1,), "float32"), mean: T.Buffer((4000,), "float32"), stddev: T.Buffer((4000,), "float32")):
    T.func_attr({"tir.noalias": T.bool(True)})
    # with T.block("root"):
    for j in range(4000):
        for i in range(4000):
            with T.block("reduction_block: stddev"):
                j, i = T.axis.remap("SR", [j, i])
                with T.init():
                    stddev[j] = T.float32(0)
                stddev[j] = stddev[j] + (data[i, j] - mean[j]) * (data[i, j] - mean[j])
        with T.block("block0"):
            stddev[j] = stddev[j] / float_n[0]
        with T.block("block1"):
            stddev[j] = T.Cast("float32", T.call_extern("float64", "sqrt", T.Cast("float64", stddev[j])))
        with T.block("block2"):
            stddev[j] = T.Cast("float32", T.Select(stddev[j] <= eps[0], T.float64(1), T.Cast("float64", stddev[j])))
